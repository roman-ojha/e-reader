

"""
This file was generated by graphql-schema-generator which is
maintained by prisma-korea.

Do not make changes to this file directly.
Read more about in https://github.com/prisma-korea/graphql-schema-generator.
"""
scalar DateTime

enum Role {
  USER
  ADMIN
}

type User {
  id: ID!
  username: String!
  first_name: String
  last_name: String
  email: String!
  password: String!
  role: Role!
  createdAt: DateTime!
  updateAt: DateTime!
  author: Author
  AddToCard: [AddToCard!]!
  PurchasedBook: [PurchasedBook!]!
  BookReview: [BookReview!]!
  StoreBookReview: [StoreBookReview!]!
  CurrentlyReadingBooks: [CurrentlyReading!]!
  FinishedReadingBooks: [FinishedReading!]!
}

type Book {
  id: ID!
  author: Author!
  title: String!
  page: Int!
  description: String
  published: DateTime
  langauge: String
  createAt: DateTime!
  updateAt: DateTime!
  BookStore: BookStore
  genres: [Genere!]!
  PurchasedUsers: [PurchasedBook!]!
  BookReviewedUsers: [BookReview!]!
  CurrentlyReadingUsers: [CurrentlyReading!]!
  FinishedReadingUsers: [FinishedReading!]!
}

type Author {
  id: ID!
  user: User!
  createdAt: DateTime!
  updateAt: DateTime!
  Book: [Book!]!
}

type AddToCard {
  id: ID!
  user: User!
  bookStore: BookStore!
  createAt: DateTime!
  updateAt: DateTime!
}

type BookStore {
  id: ID!
  book: Book!
  price: Int!
  discount: Int!
  outOfStock: Boolean!
  createAt: DateTime!
  updateAt: DateTime!
  AddToCard: [AddToCard!]!
  StoreBookReview: [StoreBookReview!]!
}

type Genere {
  id: ID!
  books: [Book!]!
  name: String!
  createAt: DateTime!
  updateAt: DateTime!
}

type PurchasedBook {
  id: ID!
  user: User!
  book: Book!
  createAt: DateTime!
  updateAt: DateTime!
}

type BookReview {
  id: ID!
  user: User!
  book: Book!
  rate: Int!
  review: String
  createAt: DateTime!
  updateAt: DateTime!
}

type StoreBookReview {
  id: ID!
  user: User!
  bookStore: BookStore!
  rate: Int!
  review: String
  createAt: DateTime!
  updateAt: DateTime!
}

type CurrentlyReading {
  id: ID!
  user: User!
  book: Book!
  createAt: DateTime!
  updateAt: DateTime!
}

type FinishedReading {
  id: ID!
  user: User!
  book: Book!
  createAt: DateTime!
  updateAt: DateTime!
}




